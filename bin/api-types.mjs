#!/usr/bin/env node

import fs from "node:fs";
import openapiTS from "openapi-typescript";
import prettier from "prettier";
import ts from "typescript";

const services = process.argv[2].split(",");

const UUID = ts.factory.createTypeReferenceNode(
  ts.factory.createIdentifier("UUID"),
);
const NULL = ts.factory.createLiteralTypeNode(ts.factory.createNull());

await Promise.all(
  services.map(async (service) => {
    const output = await openapiTS(`https://${service}.changeengine.com/doc`, {
      transform(schemaObject) {
        if ("format" in schemaObject && schemaObject.format === "uuid") {
          return schemaObject.nullable
            ? ts.factory.createUnionTypeNode([UUID, NULL])
            : UUID;
        }
      },
    });
    const printer = ts.createPrinter({});
    const resultFile = ts.createSourceFile(
      `src/__definitions__/${service}-definitions.ts`,
      "",
      ts.ScriptTarget.Latest,
    );
    const result = printer.printNode(
      ts.EmitHint.Unspecified,
      output[0],
      resultFile,
    );
    fs.writeFileSync(
      `src/__definitions__/${service}-definitions.ts`,
      await prettier.format(
        `// Autogenerated by two-stroke

${fs.readFileSync("src/__definitions__/type-definitions.ts", "utf-8")}

${result}`,
        { parser: "typescript", printWidth: 100 },
      ),
    );
  }),
);
